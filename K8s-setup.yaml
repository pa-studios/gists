----------------------------------------------------------------------------
  KUBERNETES Cluster setup with kubeadm   (1 master node and 2 worker nodes)
   OS:  UBUNTU 18.04   
   min. requirements to run smoothly..!
   CPU: 2 vCPU   memory: 4GB  10GB HDD/SSD
-----------------------------------------------------------------------------
                  run the below script on all nodes (1-master 2-workers)
-----------------------------------------------------------------------------
#!/bin/bash

#Updating packages
sudo apt-get update && apt-get upgrade -y && apt install wget curl -y;
#Installing Docker
sudo apt install -y docker.io;
#Turning off swap memory
sudo swapoff -a;
#Installing Kubernetes
sudo curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -;
echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" >> /etc/apt/sources.list.d/kubernetes.list;
sudo apt update -y;
sudo apt install -y kubelet kubeadm kubectl -y;
sudo service docker start;
sleep 15;
sudo systemctl enable docker.service;
sudo systemctl enable kubelet.service;
sudo systemctl daemon reload;
sleep 15;
sudo docker version;
sudo kubectl version;
sudo kubelet --version;
sudo kubeadm version;

-----------------------------------------------------------------------------
                 run the below code/script on master
-----------------------------------------------------------------------------

kubeadm init --pod-network-cidr=10.244.0.0/16;

-----------------------------------------------------------------------------
NOTE: check the CIDR if you are using another network.. 
----------------------------------------------------------------------------
        THE FOLLOWING MEESAGE WILL BE DISPLAYED after running above command
----------------------------------------------------------------------------

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 10.128.15.216:6443 --token e7w0wr.er4u4uwef98fu89wul1oh \
--discovery-token-ca-cert-hash sha256:74ece1cfdya0sy0dsya80dy8asydada80dys0ayd0yabd61	
-------------------------------------------------------------------------------------

-----------------------------------------------------------------------------
      now run the below code/script on master
-----------------------------------------------------------------------------

  mkdir -p $HOME/.kube;
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config;
  sudo chown $(id -u):$(id -g) $HOME/.kube/config;
  alias k=kubectl;
--------------------------------------------------------------------------------

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/
  
 I have used calico network ..!!
 
-----------------------------------------------------------------------------
          run the below script on master pod network will be created. 
-----------------------------------------------------------------------------
kubectl apply -f https://docs.projectcalico.org/v3.11/manifests/calico.yaml
------------------------------------------------------------------------------------

 NOTE:
  - wait untill all the pods gets running status.
  
-------------------------------------------------------------------------------------------
Then you can join any number of worker nodes by running the following on each as root:

-----------------------------------------------------------------------------
          run the below script on worker nodes 
 (please wait until the worker node is joined before running it on second worker node)
-----------------------------------------------------------------------------
sudo kubeadm join 10.128.15.216:6443 --token e7w0wr.er4u4uwef98fu89wul1oh \
    --discovery-token-ca-cert-hash sha256:74ece1cfdya0sy0dsya80dy8asydada80dys0ayd0yabd61 
--------------------------------------------------------------------------------------------
   note:  in ur case the generated 'token' and 'discovery-token-ca-cert-hash' is different.
-------------------------------------------------------------------------------------
